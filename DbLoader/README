/* Copyright (C) 2013-2015, International Business Machines Corporation  */
/* All Rights Reserved                                	                 */

The 'DB Loader' is an SPL application for InfoSphere Streams.
It uses the DB2, Informix load command tool, the Oracle SQL Loader or the Netezza Loader 
to load files directly into the database. 

The DbLoader scans the input directory and loads files parallel into the database.  
It improves insert-performance of DB2 and Oracle database actions.
It is not needed to change the SPL code in case of new tables.
The input file name must include the database schema and the table name.  
The database schema begins after the path and ends with a dot ".".
The table name begin afters "." and end with a dash "-",             
for example:  /data/in/DB2INST1.MY_TABLE_123-2014.03.31.csv 
In this case DB2INST1 is the database user name (or schema) 
and MY_TABLE_123 is the table name.
All input files must have a correctly formated Comma Separated Value (csv) format.

--------------------------------------------------------------------------

The DbLoader uses the LinuxSource operator to execute a command.
The LinuxSource operator is a part of com.ibm.streamsx.linuxshell toolkit.
It is available in GitHub: 
https://github.com/ejpring/LinuxShellToolkit 

--------------------------------------------------------------------------

To run the DbLoader job you need to do the following steps:

1. Configure the parameters

Change configuration parameters in config/config.cfg file.
Set the absolute path for directories in configuration file.
e.g. INPUT_DIR=/home/streams/DbLoder/data/in
see also 3.

--------------------------------------------------------------------------
Parameter name  | Submission  | Default       | Description
in config.cfg   | Parameter   | value         |
--------------------------------------------------------------------------
DBNAME           dbName                           The name of the database
DBUSER           dbUser                           The name of the DB user 
DBPWD            dbPass                           The password of the DB user
INPUT_DIR        inputDir      ../data/in         The directory that stores the table files in CSV format.
ARCHIVE_DIR      archiveDir    ../data/archive    The directory that stores the successfully loaded files.
ERROR_DIR        errorDir      ../data/error      The directory that stores the failed files.
LOG_DIR          logDir        ../data/log        The directory that stores the log files.
CONTROLFILES_DIR oracleCtlDir  ../data/controlDir The directory where the Oracle control-files are places.
DATABASETYPE         -          DB2               The Database type DB2 or Oracle
PARALLEL_LOADERS     -          5                 The number of parallel loaders (1-10)


2. Check the database connection status and make sure 
   that the database server is running.
   see also 3.

2.1 DB2
    db2 connect to DBNAME user <DBUSER> using <DBPWD>


2.2 Oracle
    sqlplus -s <DBUSER>/<DBPWD>@<DBNAME>

Database name is defined in $TNS_ADMIN/tnsnames.ora
For example 
TESTORA =
  (DESCRIPTION = 
    (ADDRESS_LIST =
      (ADDRESS = (PROTOCOL = TCP) (HOST = 192.168.181.129)(PORT = 1521))
    )
    (CONNECT_DATA = (SID = ORAC))
  )

Check the installation of the Oracle SQL Loader sqlldr.
more details in:
    http://docs.oracle.com/cd/B19306_01/server.102/b14215/part_ldr.htm


2.3 Netezza
    nzsql -host <nz-host> -u user -pw password -d database
    nzload -h

2.4 Informix
    dbaccess - connect.sql
    cat connect.sql
    CONNECT to <database> USER <username> USING <password>
    

3. The configure script

The script ./config/configure.pl combines a comfortable  configuration and a 
database access check. It is located in the DbLoader application folder. 

4. Build the application
    make all

5. Copy your input csv files into the input directory.

Make sure that: 
	-- The streams instance is running.
	-- The database is running and available.
	-- The tables for all input files are already created in database.

6. Start the job
    streamtool submitjob -i <instance> output/Distributed/com.ibm.streamsx.db.dbloader.Main.adl

It is also possible to start the dbloader job with submission parameters. 
For example:
    streamtool submitjob  output/Distributed/com.ibm.streamsx.db.dbloader.Main.adl 
    -P com.ibm.streamsx.db.dbloader.Main.dbUser=db2inst1

7. Check the log file.
e.g. tail -f /home/streamsadmin/DbLoader/data/log/14.06.25_dbloader.log

8. Stop the job
    streamtool canceljob <job-id>
