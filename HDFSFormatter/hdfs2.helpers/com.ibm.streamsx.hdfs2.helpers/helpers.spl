
/* Copyright (C) 2013-2014, International Business Machines Corporation  */
/* All Rights Reserved                                	                 */

/**
 * The operators that providing formatting and parsing must have a 
 * match the parameters that HDFSReadFormat and HDFSFormatWrite
 * expect.  These operators do that for the txt format, and are
 * included as the default operators in HDFSReadFormat and 
 * HDFSFormatWrite.
 * 
 */
 
namespace com.ibm.streamsx.hdfs2.helpers;

/** Default tuple to text conversion operator.
 * Default tuple to text conversion operator.  Uses a functor
 * and SPL's cast function inside of it.
 * @input inStream A stream of tuples of any type.
 * @output outStream A stream of rstrings.
 */
composite toText (input inStream;
				   output stream<rstring astring> outStream) {
graph
stream<rstring astring> outStream = Functor(inStream) {
	output outStream:
	astring = (rstring)inStream;
}
}

/** Default text to tuple conversion operator.
 * Default text to tuple conversion operator.  It uses SPL's
 * cast function.  It takes as an argument the type of the
 * output stream.
 * @input inStream A stream of rstrings representing tuples.
 * @output outStream A stream of tuples resulting from converting the input stream.
 * @param outType The type of the output tuples. 
 */
composite fromText(input stream<rstring line> inStream;
					output outStream) {
param 
type $outType;	
graph

stream<$outType> outStream = Custom(inStream) {
logic onTuple inStream:
submit(($outType)inStream.line,outStream);
onPunct inStream:
submit(currentPunct(),outStream);
}
}